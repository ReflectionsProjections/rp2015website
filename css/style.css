/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
html, body {
  font-family: 'Lora', serif;
  background: url(../img/dot.png) fixed; }

svg {
  position: fixed;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 0; }

svg path {
  opacity: .3;
  fill: none;
  stroke: #d04040;
  stroke-width: 1.5px;
  stroke-linecap: rounded; }

h1, h2, h3, h4, h5, h6, nav {
  font-family: 'Ubuntu', sans-serif;
  color: #161515; }

hr {
  border-style: solid;
  border-bottom: none; }

a {
  text-decoration: none; }

h1 {
  position: fixed;
  margin: 20px auto 0;
  left: 0;
  right: 0;
  width: 220px;
  font-size: 1em;
  font-weight: 300;
  text-align: center;
  color: #fff; }

h3 {
  margin: 0; }

nav#desktop-nav {
  position: fixed;
  top: 50%;
  transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  right: 0;
  z-index: 5;
  font-weight: 300;
  font-size: .8em;
  text-transform: uppercase;
  letter-spacing: 1px; }
  nav#desktop-nav ul {
    list-style: none;
    padding: 0; }
  nav#desktop-nav li {
    display: block;
    margin-bottom: 20px;
    text-align: right;
    color: #7a7a7a;
    cursor: pointer;
    transition: color 0.2s; }
  nav#desktop-nav a {
    display: inline-block; }
  nav#desktop-nav a::after {
    display: inline-block;
    content: "";
    margin-left: 16px;
    margin-right: 60px;
    height: 10px;
    width: 10px;
    background-color: #7a7a7a;
    transition: background-color 0.2s, width 0.2s, margin-right 0.2s; }
  nav#desktop-nav li:hover, nav#desktop-nav li.active {
    color: #d0d0d0; }
    nav#desktop-nav li:hover a::after, nav#desktop-nav li.active a::after {
      background-color: #d0d0d0;
      margin-right: 0;
      width: 70px; }

nav#mobile-nav {
  display: none;
  z-index: 5;
  *zoom: 1;
  position: fixed;
  top: 0;
  width: 100%;
  background-color: #0c2231;
  border-bottom: 2px solid #d0d0d0;
  color: #7a7a7a;
  font-weight: 300;
  font-size: .9em;
  text-transform: uppercase; }
  nav#mobile-nav:before, nav#mobile-nav:after {
    content: '';
    display: table; }
  nav#mobile-nav:after {
    clear: both; }
  nav#mobile-nav ul {
    list-style: none;
    padding: 0;
    width: 100%; }
  nav#mobile-nav li {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 25%;
    margin-left: 0%;
    margin-right: 0%;
    transition: .1s color;
    text-align: center;
    padding-top: 5px;
    padding-bottom: 10px;
    cursor: pointer; }
    nav#mobile-nav li:before, nav#mobile-nav li:after {
      content: '';
      display: table; }
    nav#mobile-nav li:after {
      clear: both; }
  nav#mobile-nav li:hover, nav#mobile-nav li.active {
    color: #d0d0d0;
    border-bottom: 6px solid #d0d0d0; }

section {
  box-sizing: border-box;
  padding-top: 200px; }
  section p {
    color: #514e4e; }
  section .content {
    position: relative;
    z-index: 2;
    background-color: #fff;
    margin-left: 150px; }
  section .right {
    margin-left: auto;
    margin-right: 240px; }
  section:last-of-type {
    padding-bottom: 200px; }

section.home {
  min-height: 600px;
  padding-top: 260px; }
  section.home h2 {
    position: relative;
    margin-left: 150px;
    padding-right: 200px;
    font-weight: 700;
    font-size: 4em;
    color: #fff;
    z-index: 2; }

section.about {
  line-height: 1.4; }
  section.about .content {
    position: relative;
    padding: 50px 140px 35px 70px;
    max-width: 625px;
    overflow: hidden; }
  section.about hr {
    border-color: #d04040;
    margin: 60px 0 0;
    width: 200px; }
  section.about .more {
    margin: 20px 0 10px;
    display: block;
    font-family: 'Ubuntu', sans-serif;
    font-style: italic;
    font-size: .8em;
    font-weight: 400;
    color: #a5a5a5; }
  section.about .links hr {
    width: 100%;
    margin-top: 11px;
    border-color: #161515;
    transition: opacity .6s; }
  section.about a {
    font-family: 'Ubuntu', sans-serif;
    color: #d04040;
    cursor: pointer;
    padding: 0 15px 10px;
    transition: color 0.1s; }
    section.about a:hover {
      color: #d68f8f; }
    section.about a.active, section.about a:hover {
      border-bottom: 4px solid #d04040; }
    section.about a:first-child {
      padding-left: 0; }
  section.about .register-button {
    display: block;
    font-weight: 700;
    border: 2px solid #d04040;
    padding: 10px 0;
    text-align: center;
    text-transform: uppercase;
    transition: color .2s, background-color .2s; }
    section.about .register-button:hover {
      color: #fff;
      background-color: #d04040; }
  section.about .line {
    position: relative;
    top: -3px;
    font-size: .8em;
    color: #a5a5a5; }
  section.about .center {
    display: block;
    text-align: center; }
  section.about .about-slider a {
    padding-left: 0; }

section.speakers .content {
  *zoom: 1;
  padding: 50px 0 35px 70px;
  max-width: 600px; }
  section.speakers .content:before, section.speakers .content:after {
    content: '';
    display: table; }
  section.speakers .content:after {
    clear: both; }
section.speakers figure {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 32.0%;
  margin-left: 0%;
  margin-right: 2%;
  overflow: hidden; }
  section.speakers figure:before, section.speakers figure:after {
    content: '';
    display: table; }
  section.speakers figure:after {
    clear: both; }
  section.speakers figure:nth-of-type(3n) {
    margin-right: 0%;
    float: right; }
  section.speakers figure:nth-of-type(3n + 1) {
    clear: both; }
section.speakers img {
  width: 100%;
  cursor: pointer; }
section.speakers h4 {
  font-family: 'Lora';
  font-weight: normal;
  margin: 4px 0 0;
  color: #514e4e; }
section.speakers .speaker-info {
  color: #514e4e; }

section.schedule .content {
  *zoom: 1;
  padding: 50px 40px 30px;
  max-width: 700px; }
  section.schedule .content:before, section.schedule .content:after {
    content: '';
    display: table; }
  section.schedule .content:after {
    clear: both; }
section.schedule .col {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 48.5%;
  margin-left: 0%;
  margin-right: 3%; }
  section.schedule .col:before, section.schedule .col:after {
    content: '';
    display: table; }
  section.schedule .col:after {
    clear: both; }
  section.schedule .col:nth-of-type(2n) {
    margin-right: 0%;
    float: right; }
  section.schedule .col:nth-of-type(2n + 1) {
    clear: both; }
section.schedule ul {
  list-style: none;
  padding: 0; }
section.schedule li {
  border-bottom: 1px solid #d0d0d0;
  padding: 10px 6px;
  font-family: 'Lora'; }
  section.schedule li small {
    display: inline-block;
    font-family: 'Ubuntu';
    font-weight: 300;
    color: #a5a5a5;
    width: 50px; }
  section.schedule li span {
    display: none;
    float: right; }
section.schedule li:last-child {
  border: none; }

section.faq .content {
  *zoom: 1;
  padding: 50px 40px 30px;
  max-width: 650px; }
  section.faq .content:before, section.faq .content:after {
    content: '';
    display: table; }
  section.faq .content:after {
    clear: both; }
section.faq hr {
  border-color: #d0d0d0; }
section.faq .questions {
  *zoom: 1; }
  section.faq .questions:before, section.faq .questions:after {
    content: '';
    display: table; }
  section.faq .questions:after {
    clear: both; }
  section.faq .questions > div {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 48.5%;
    margin-left: 0%;
    margin-right: 3%; }
    section.faq .questions > div:before, section.faq .questions > div:after {
      content: '';
      display: table; }
    section.faq .questions > div:after {
      clear: both; }
    section.faq .questions > div:nth-of-type(2n) {
      margin-right: 0%;
      float: right; }
    section.faq .questions > div:nth-of-type(2n + 1) {
      clear: both; }
  section.faq .questions a {
    color: #d04040; }
    section.faq .questions a:hover {
      color: #d68f8f; }
section.faq h4 {
  margin-bottom: 0; }
section.faq h5 {
  margin-bottom: 0; }
section.faq .address a {
  display: block;
  margin-top: 6px;
  color: #a5a5a5;
  font-size: .9em; }
  section.faq .address a:hover {
    text-decoration: underline; }
section.faq p {
  margin-top: 4px;
  font-size: .9em;
  line-height: 1.3; }

section.sponsors .content {
  *zoom: 1;
  padding: 50px 40px 30px;
  max-width: 700px; }
  section.sponsors .content:before, section.sponsors .content:after {
    content: '';
    display: table; }
  section.sponsors .content:after {
    clear: both; }
section.sponsors h3 {
  margin-bottom: 50px; }
section.sponsors img {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 45%;
  margin-left: 0%;
  margin-right: 10%; }
  section.sponsors img:before, section.sponsors img:after {
    content: '';
    display: table; }
  section.sponsors img:after {
    clear: both; }
  section.sponsors img:nth-of-type(2n) {
    margin-right: 0%;
    float: right; }
  section.sponsors img:nth-of-type(2n + 1) {
    clear: both; }

.footer {
  padding-left: 10px;
  padding-bottom: 10px; }
  .footer a {
    position: relative;
    z-index: 50;
    color: #fff;
    text-decoration: none;
    font-family: 'Ubuntu', sans-serif;
    font-weight: 400;
    font-size: .9em;
    cursor: pointer;
    transition: color .1s; }
    .footer a:hover {
      color: #d04040; }

/* taken from Matt Boldt's 'Typed.js' */
.typed-cursor {
  opacity: 1;
  -webkit-animation: blink 0.7s infinite;
  -moz-animation: blink 0.7s infinite;
  animation: blink 0.7s infinite; }

@keyframes blink {
  0% {
    opacity: 1; }
  50% {
    opacity: 0; }
  100% {
    opacity: 1; } }
@-webkit-keyframes blink {
  0% {
    opacity: 1; }
  50% {
    opacity: 0; }
  100% {
    opacity: 1; } }
@-moz-keyframes blink {
  0% {
    opacity: 1; }
  50% {
    opacity: 0; }
  100% {
    opacity: 1; } }
@media only screen and (max-width: 1170px) {
  nav#desktop-nav {
    display: none; }

  section .content, section.home h2 {
    margin-left: 100px; }
  section .right {
    margin-right: 100px;
    margin-left: auto; } }
@media only screen and (max-width: 950px) {
  nav#mobile-nav {
    display: block; }

  h1 {
    position: absolute;
    top: 60px; }

  section {
    padding: 10px 10px 10px; }
    section .content {
      margin: 0;
      max-width: 100% !important; }

  section.home {
    padding: 260px 20px 0; }
    section.home h2 {
      font-size: 2.8em;
      margin: 0;
      padding: 0; }

  section .content {
    padding: 30px 20px !important; } }
@media only screen and (max-width: 700px) {
  section.about .links .line {
    display: none; }
  section.about .links a {
    padding-left: 0;
    padding-right: 30px;
    padding-bottom: 0;
    color: #d68f8f; }
    section.about .links a:hover, section.about .links a.active {
      border: none;
      color: #d04040; }
  section.about .links hr {
    margin-top: 4px; } }
@media only screen and (max-width: 600px) {
  svg {
    display: none; }

  section.home h2 {
    font-size: 2.3em; }

  section.schedule .col {
    display: block;
    clear: both;
    float: none;
    width: 100%;
    margin-left: auto;
    margin-right: auto; }
    section.schedule .col:first-child {
      margin-left: auto; }
    section.schedule .col:last-child {
      margin-right: auto; }

  section.faq .questions > div {
    display: block;
    clear: both;
    float: none;
    width: 100%;
    margin-left: auto;
    margin-right: auto; }
    section.faq .questions > div:first-child {
      margin-left: auto; }
    section.faq .questions > div:last-child {
      margin-right: auto; } }

/*# sourceMappingURL=style.css.map */
